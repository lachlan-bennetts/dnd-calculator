// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Campaign {
  id String @id @default(cuid())
  campaignName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Race {
  raceId String @id @default(cuid())
  parentRace String
  subRace String
  briefDescription String
  creatureType CreatureType
  darkVision Int
  statPoolModifier Int[]
  damageTypeResistance DamageType[]
  damageTypeAdvantageThrows DamageType[]
  conditionAdvantageThrows ConditionType[]
  MaxHealthModifier Int
  cantripSlotModifier Int?
  LanguageSlotModifier Int?
  walkingSpeed Int
  flyingSpeed Int?
  size Size
  effects String[]
  weaponProficiencies WeaponType[]
  armourProficiencies ArmourType[]
  toolProficiencies ToolType[]
  features RaceFeature[]
  languages Language[]
  character Character[]
}

model RaceFeature {
  raceFeatureId String @id @default(cuid())
  name String
  description String
  race Race[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HeldItem {
  characterItemId String @id @default(cuid())
  character Character @relation(fields: [characterId], references: [characterId])
  characterId String
  item Item @relation(fields: [itemId], references: [itemId])
  itemId String
}

model Item {
  itemId String @id @default(cuid())
  name String
  version String
  description String
  rarity String
  itemType ItemType
  consumableType ConsumableType
  toolType ToolType
  armourType ArmourType
  weaponType WeaponType
  attributeModifier Int[]
  skillModifier Int[]
  hasCharges Boolean
  charges Int
  requiresAttunement Boolean
  damageType String
  damageDieType Int
  damageDieNumber Int
  damageBonus Int
  heldItem HeldItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Class {
  classId String @id @default(cuid())
  name String
  hitDie String
  hitPointsAtFirstLevel Int
  staticHitPointIncrease Int
  weaponProficiency WeaponType[]
  armourProficiency ArmourType[]
  classFeatures ClassFeature[]
  characterClasses CharacterClass[]
  startingEquipment String[]
  attributeSavingThrows Attribute[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ClassFeature {
  id String @id @default(cuid())
  name String
  description String
  class String
  subclass String?
  level Int
  characterClasses CharacterClass[]
  Class Class @relation(fields: [classId], references: [classId])
  classId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CharacterClass {
  id String @id @default(cuid())
  character Character @relation(fields: [characterId], references: [characterId])
  characterId String
  class Class @relation(fields: [classId], references: [classId])
  classId String
  classFeatures ClassFeature[]
  subclass String?
  classLevel Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Monster {
  monsterId String @id @default(cuid())
  name String
  size Size
  alignment String
  armourClass Int
  hitPoints Int
  hitDieType Int
  HitDieNumber Int
  creatureType CreatureType
  speed Int
  attributes String[]
  savingThrows Int[]
  skills Int[]
  features String[]
  damageResistances DamageType[]
  damageImmunities DamageType[]
  conditionImmunities ConditionType[]
  passivePerception Int
  senses String[]
  languages Language[]
  challengeRating Int
  specialAbilities String
  actions String
  legendaryActions String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Spell {
  spellId String @id @default(cuid())
  name String
  level Int
  school String
  castingTime Int
  range Int
  areaOfEffect String
  components String
  duration Int
  description String
  damageType DamageType
  damageDieType Int
  damageDieNumber Int
  damageBonus Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Character {
  characterId String @id @default(cuid())
  playerName String
  characterName String
  armourClass Int
  currenthitPoints Int
  maxHitPoints Int
  tempHitPoints Int?
  speed Int
  spellSaveDC Int
  isProficient Boolean
  proficiencyBonus Int
  weaponProficiency WeaponType[]
  armourProficiency ArmourType[]
  ToolProficiency ToolType[]
  Inventory HeldItem[]
  race Race @relation(fields: [raceId], references: [raceId])
  raceId String @unique
  user User @relation(fields: [userId], references: [userId])
  userId String @unique
  characterClasses CharacterClass[]
  attributes Int[]
  skills Int[]
} 

model User {
  userId String @id @default(cuid())
  email String @unique
  username String @unique
  password String
  characters Character[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Skill {
  ACROBATICS
  ANIMAL_HANDLING
  ARCANA
  ATHLETICS
  DECEPTION
  HISTORY
  INSIGHT
  INTIMIDATION
  INVESTIGATION
  MEDICINE
  NATURE
  PERCEPTION
  PERFORMANCE
  PERSUASION
  RELIGION
  SLEIGHT_OF_HAND
  STEALTH
  SURVIVAL
}

enum Attribute {
  STRENGTH
  DEXTERITY
  CONSTITUTION
  INTELLIGENCE
  WISDOM
  CHARISMA
}

enum ItemType {
  WEAPON
  ARMOUR
  TOOL
  CONSUMABLE
  MISC
}

enum ConsumableType {
  POTION
  SCROLL
  WAND
  ROD
  STAFF
  RING
  WONDROUS_ITEM
  MISC
  NULL
}

enum ToolType {
  ARTISANS_TOOL
  DISGUISE_KIT
  FORGERY_KIT
  GAMING_SET
  HERBALISM_KIT
  MUSICAL_INSTRUMENT
  NAVIGATORS_TOOL
  POISONERS_KIT
  THIEVES_TOOL
  VEHICLES_LAND
  VEHICLES_WATER
  NULL
}

enum ArmourType {
  LIGHT_ARMOUR
  MEDIUM_ARMOUR
  HEAVY_ARMOUR
  SHIELDS
  NULL
}

enum WeaponType {
  SIMPLE_WEAPON
  MARTIAL_WEAPON
  NULL
}

enum DamageType {
  ACID
  BLUDGEONING
  COLD
  FIRE
  FORCE
  LIGHTNING
  NECROTIC
  PIERCING
  POISON
  PSYCHIC
  RADIANT
  SLASHING
  THUNDER
  NULL
}

enum ConditionType {
  BLINDED
  CHARMED
  DEAFENED
  FRIGHTENED
  GRAPPLED
  INCAPACITATED
  INVISIBLE
  PARALYZED
  PETRIFIED
  POISONED
  PRONE
  RESTRAINED
  STUNNED
  UNCONSCIOUS
  NULL
}

enum Language {
  COMMON
  DWARVISH
  ELVISH
  GIANT
  GNOMISH
  GOBLIN
  HALFLING
  ORC
  ABYSSAL
  CELESTIAL
  DRACONIC
  DEEP_SPEECH
  INFERNAL
  PRIMORDIAL
  SYLVAN
  UNDERCOMMON
  ALL
}

enum Size {
  TINY
  SMALL
  MEDIUM
  LARGE
  HUGE
  GARGANTUAN
}

enum CreatureType {
  ABERRATION
  BEAST
  CELESTIAL
  CONSTRUCT
  DRAGON
  ELEMENTAL
  FEY
  FIEND
  GIANT
  HUMANOID
  MONSTROSITY
  OOZE
  PLANT
  UNDEAD
}