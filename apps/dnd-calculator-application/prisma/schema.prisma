// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Campaign {
  id String @id @default(cuid())
  campaignName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Race {
  id String @id @default(cuid())
  name String @unique
  subrace String
  description String
  attackBonus Int?
  spellcastingBonus Int?
  raceFeatures String[]
  character Character[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ClassFeature {
  id String @id @default(cuid())
  name String
  description String
  class String
  subclass String?
  level Int
  characterClasses CharacterClass[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Class {
  id String @id @default(cuid())
  name String
  characterClasses CharacterClass[]
  savingThrows String[]
  hitDie Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CharacterClass {
  id String @id @default(cuid())
  character Character @relation(fields: [characterId], references: [id])
  characterId String
  class Class? @relation(fields: [classId], references: [id])
  classId String
  classFeatures ClassFeature[]
  subclass String?
  level Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Attributes {
  id String @id @default(cuid())
  strength Int
  dexterity Int
  constitution Int
  intelligence Int
  wisdom Int
  charisma Int
  character Character @relation(fields: [characterId], references: [id])
  characterId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Skills {
  id String @id @default(cuid())
  acrobatics Int
  animalHandling Int
  arcana Int
  athletics Int
  deception Int
  history Int
  insight Int
  intimidation Int
  investigation Int
  medicine Int
  nature Int
  perception Int
  performance Int
  persuasion Int
  religion Int
  sleightOfHand Int
  stealth Int
  survival Int
  character Character @relation(fields: [characterId], references: [id])
  characterId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Character {
  id String @id @default(cuid())
  playerName String
  characterName String
  armourClass Int
  currenthitPoints Int
  maxHitPoints Int
  tempHitPoints Int?
  speed Int
  spellSaveDC Int
  isProficient Boolean
  proficiencyBonus Int
  proficientWeapons String[]
  race Race @relation(fields: [raceName], references: [name])
  raceName String @unique
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  characterClasses CharacterClass[]
  attributes Attributes?
  skills Skills?
} 

model User {
  id String @id @default(cuid())
  email String @unique
  username String @unique
  password String
  characters Character[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}