// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output = "./schema.svg"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Campaign {
  id String @id @default(cuid())
  campaignName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Race {
  subRace String @unique @id
  parentRace String
  briefDescription String
  creatureType String
  darkVision Int
  statPoolModifier Int[]
  statPoolIncrease Int @default(0)
  damageTypeResistance String[]
  damageTypeAdvantageThrows String[]
  conditionAdvantageThrows String[]
  MaxHealthModifier Int @default(0)
  cantripSlotModifier Int @default(0)
  languageSlotModifier Int @default(0)
  walkingSpeed Int
  flyingSpeed Int @default(0)
  swimmingSpeed Int @default(0)
  climbingSpeed Int @default(0)
  size String @default("Medium")
  effects String[]
  weaponProficiencies String[] @default([])
  armourProficiencies String[] @default([])
  toolProficiencies String[] @default([])
  skillProficiencies String[] @default([])
  features RaceFeature[]
  languages String[]
  character Character[]
}

model RaceFeature {
  raceFeatureId String @id @default(cuid())
  name String
  level Int
  description String
  race Race[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Class {
  className String @unique @id
  hitDie Int
  weaponProficiencies String[]
  armourProficiencies String[]
  availableToolProficencies String[] @default([])
  spells Spell[] @relation("ClassSpells")
  classFeatures ClassFeature[]
  characterClasses CharacterClass[]
  availableSkillProficiencies String[]
  startingEquipment String[]
  primaryAttribute String
  spellCastingAttribute String?
  savingThrowProficiencies String[]
  recommendedStandardArray Int[]
  subClassStart Int @default(3)
}

model ClassFeature {
  classFeatureId String @id @default(cuid())
  featureName String
  featureDescription String
  subclass String?
  featureLevel Int
  Class Class @relation(fields: [className], references: [className])
  className String
}

model CharacterClass {
  characterClassId String @id @default(cuid())
  character Character @relation(fields: [characterId], references: [characterId])
  characterId String
  class Class @relation(fields: [className], references: [className])
  className String
  spellSaveDC Int
  spellCapacity Int
  characterSpells CharacterSpell[]
  ProficientSkills String[]
  subClass String?
  classLevel Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CharacterSpell {
  id String @id @default(cuid())
  characterClass CharacterClass @relation(fields: [characterClassId], references: [characterClassId])
  characterClassId String
  spell Spell @relation(fields: [spellName], references: [spellName])
  spellName String
  active Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Background {
  backgroundName String @unique @id
  backgroundDescription String
  skillProficiencies String[]
  toolProficiencies String[]
  toolTypeProficiencies String[] @default([])
  languageSlotModifier Int @default(0)
  equipment String[]
  backgroundFeatureTitle String
  backgroundFeatureDescription String
  suggestedCharacteristics String[]
  Character Character[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Character {
  characterId String @id @default(cuid())
  playerName String
  characterName String
  level Int
  armourClass Int
  currentHitPoints Int
  maxHitPoints Int
  tempHitPoints Int @default(0)
  currentSpeed Int
  proficiencyBonus Int
  alignment String
  background Background @relation(fields: [backgroundName], references: [backgroundName])
  backgroundName String
  inventory HeldItem[]
  race Race @relation(fields: [subRace], references: [subRace])
  subRace String 
  user User @relation(fields: [userId], references: [userId])
  userId String
  characterClasses CharacterClass[]
  attributeArray Int[]
  skillArray Int[]
} 


model Item {
  itemId String @id @default(cuid())
  name String @unique
  version String
  description String
  rarity String
  itemType String
  consumableType String?
  toolType String?
  armourType String?
  weaponType String?
  attributeModifier Int[]
  skillModifier Int[]
  hasCharges Boolean
  charges Int
  requiresAttunement Boolean
  damageType String
  damageDieType Int
  damageDieNumber Int
  damageBonus Int
  heldItem HeldItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HeldItem {
  heldItemId String @id @default(cuid())
  character Character @relation(fields: [characterId], references: [characterId])
  characterId String
  item Item @relation(fields: [itemId], references: [itemId])
  quantity Int
  isEquipped Boolean @default(false)
  equipmentType String[]
  itemId String
}

model Monster {
  monsterId String @id @default(cuid())
  name String
  size String
  alignment String
  armourClass Int
  hitPoints Int
  hitDieType Int
  HitDieNumber Int
  creatureType String
  speed Int
  spells Spell[]
  attributes String[]
  savingThrows Int[]
  skills Int[]
  features String[]
  damageResistances String[]
  damageImmunities String[]
  conditionImmunities String[]
  passivePerception Int
  senses String[]
  languages String[]
  challengeRating Int
  specialAbilities String
  actions String
  legendaryActions String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Spell {
  spellName String @unique @id
  spellLevel Int
  school String
  enhancement String @default("")
  actionCastingTime Int @default(1)
  bonusActionCasting Boolean @default(false)
  selfCasting Boolean @default(false)
  touchCasting Boolean @default(false)
  range Int
  areaOfEffectType String @default("None")
  areaOfEffect Int[] @default([])
  components String[]
  roundDuration Int @default(0)
  spellDescription String
  concentration Boolean @default(false)
  ritual Boolean @default(false)
  targetType String @default("Any")
  targetNumber Int @default(1)
  multiTargetProximity Int @default(0)
  sightRequired Boolean @default(false)
  spellType String
  damageType String @default("")
  dieType Int @default(0)
  dieNumber Int @default(0)
  spellSave String @default("None")
  attackType String @default("")
  tags String[]
  monsters Monster[]
  classes Class[] @relation("ClassSpells")
  characterSpells CharacterSpell[]
}


model User {
  userId String @id @default(cuid())
  email String @unique
  username String @unique
  password String
  characters Character[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
